# 应用名称
# type: string(dns1123)
# default value: null
# required
# nhctl param: [NAME]
# uniq
name: nocalhost

# 应用 manifest 文件用何种类型方式组织
# type: select，options：helm/rawManifest/kustomize
# default value: null
# required
# nhctl param: --type,-t
manifestType: helm

# 应用 manifest，chart 等文件相对于根目录的存放位置, manifest 类型可以指定多个目录(Git Repo 的 Helm 类型只能填写一个)
# type: string[]
# default value: ["."]
# required
resourcePath: ["deployments/chart"]

# 应用安装前，前置执行的job
# type: object[]
# default value: []
# optional
onPreInstall:

  # Job yaml 相对于[源码]目录的位置
  # type: string
  # default value: null
  # required
  - path: "job-1.yaml"
    
    # Job yaml 相对于源码目录的位置（预留，以后支持）
    # type: string
    # default value: null
    # required
    name: xxx-job

    # job 执行的先后顺序，小的先执行
    # type: integer
    # default value: 0
    # optional
    priority: -1
  - path: "job-2.yaml"
    priority: 5

# 应用内的服务列表
# type: object[]
# default value: []
# optional
services:

    # 服务名称，与服务名称的正则表达式两者只能配置一个，如果同时配置，则 name 属性生效，nameRegex 属性不生效
    # type: string
    # default value: null
    # optional
  - name: service1
    
    # 服务对应的 Kubernetes 的工作负载类型
    # type: select, options: deployment/statefulset/pod/job/cronjob/daemonset 大小写不敏感
    # default value: deployment
    # required
    serviceType: deployment
    # 服务对应的源代码的 Git Clone 地址
    # type: string
    # default value: null
    # required
    gitUrl: "https://github.com/nocalhost/nocalhost.git"

    # 开发此服务的开发环境的镜像
    # type: string
    # default value: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/golang:latest
    # required
    devContainerImage: "codingcorp-docker.pkg.coding.net/nocalhost/dev-images/golang:latest"

    # 开发模式中同步的文件目录列表，指代码目录的相对路径
    # type: string[]
    # default value: ["."]
    # optional
    syncDirs:
      - "./src"
      - "./pkg/fff"
    
    # 开发模式需要转发端口到本地，支持本地固定和随机端口两种方法
    # localPort:remotePort
    # type: string[]
    # default value: []
    # optional
    devPorts:
      - 8080:8080
      - :8000  # random localPort, remotePort 8000

    # 服务启动所依赖的 pod 标签选择器(此服务会等待标签选择器选中的 pod 启动完毕才启动)
    # type: string[]
    # default value: []
    # optional
    dependPodsLabelSelector:
      # 只要包含其中一个选择器就会被选中
      # 多个 labels 选择器是 and 的关系，只有全部被依赖的服务启动完成，服务的业务容器才会启动
      - "name=mariadb"
      - "app.kubernetes.io/name=mariadb"

    # 服务启动所依赖的 pod 标签选择器(此服务会等待标签选择器选中的 job 执行完毕才启动)
    # type: string[]
    # default value: []
    # optional
    dependJobsLabelSelector:
      - "name=init-job"
      - "app.kubernetes.io/name=init-job"

    # 开发容器的工作目录（本地源码会同步到此容器的工作目录，后续支持：此工作目录会使用 PV 持久化，方便后续持续开发）
    # type: string
    # default value: "/home/nocalhost-dev"
    # optional
    workDir: "/home/nocalhost-dev"

  - name: service2
    # 服务2，相同的配置参数